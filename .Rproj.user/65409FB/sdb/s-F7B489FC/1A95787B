{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Dashboarding with flexdashboard and opencpu\"\nauthor: \"YCR\"\ndate: \"31 October 2016\"\noutput: html_document\n---\n\n## Opencpu\n\n[Opencpu](opencpu.org) is a system that provides a reliable and interoperable HTTP API for data analysis based on R. It allows to easily implement R in a production evironment through the use of an API to serve R scripts.\n\nAt first, it is a complex subject, as the concept of API needs to be understood, which is not the case for a lot of analysts.\n\nTo ease up beginners, I advice to read these two ressources, which described a case study of how it is used:\n\n* [Personnalised results with opencpu](https://medium.com/@TheLaddersEng/data-scientists-toolbox-for-data-infrastructure-i-e25391f145a3#.dg3csfgf1)\n* [Prefetch url with opencpu](https://earlconf.com/london/speaker/hxcuw)\n\nTo summarise, opencpu allows to run R scripts on demand.\n\nThere is alternatives to opencpu.\n\nAt the last EARl, two speakers were using different methods:\n\n* [Real-time scoring in marketplace](https://earlconf.com/london/speaker/6zbc3)\n* [Real-time predictive analytic in medical claim processing](https://earlconf.com/london/speaker/8oj31)\n\nIn the first case, an API had been built in Ruby to wrap R code. In the second case, a R script is called in batch by a script in java.\n\nThe main caveat of opencpu is the security: I am not aware of an easy option to use https instead of http.\n\n## Flexdashboard and shiny\n\n[Flexdashboard](http://rmarkdown.rstudio.com/flexdashboard/) is a package by Rstudio which allows to do a dashboard with Rmarkdown.\n\nYou can create a standalone document as interactive as the htmlwidget packages allows you to do.\n\nYou can, for exemple, include a leaflet map, a d3 or a plotly chart.\n\nFor more complex customisation, the traditionnal way is to use shiny as the back end to create fully customised dahsboard; sometimes a good alternative to Tableau or BO.\n\n## Using opencpu with flexdashboard\n\nIt is also possible to use opencpu as the back-end of a flexdashboard. In that case, you need to do a bit of js.\n\n\n\n",
    "created" : 1477939904357.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1148630271",
    "id" : "1A95787B",
    "lastKnownWriteTime" : 1477939988,
    "last_content_update" : 1477939988204,
    "path" : "~/GitHub/flexocpu/article/2016-10-31-Dashboarding.Rmd",
    "project_path" : "article/2016-10-31-Dashboarding.Rmd",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}